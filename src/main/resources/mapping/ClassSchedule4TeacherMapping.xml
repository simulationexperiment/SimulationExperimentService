<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.simulationexperimentservice.mapper.ClassSchedule4TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.johnny.simulationexperimentservice.entity.ClassSchedule4TeacherEntity" >
    <id column="schedule_id" property="scheduleID" jdbcType="INTEGER" />
    <result column="system_id" property="systemID" jdbcType="INTEGER" />
    <result column="system_name" property="systemName" jdbcType="VARCHAR" />

    <result column="teacher_id" property="teacherID" jdbcType="INTEGER" />
    <result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />

    <result column="course_order" property="courseOrder" jdbcType="INTEGER" />
    <result column="monday_course" property="mondayCourse" jdbcType="VARCHAR" />
    <result column="tuesday_course" property="tuesdayCourse" jdbcType="VARCHAR" />
    <result column="wednesday_course" property="wednesdayCourse" jdbcType="VARCHAR" />
    <result column="thursday_course" property="thursdayCourse" jdbcType="VARCHAR" />
    <result column="friday_course" property="fridayCourse" jdbcType="VARCHAR" />
    <result column="saturday_course" property="saturdayCourse" jdbcType="VARCHAR" />
    <result column="sunday_course" property="sundayCourse" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCountByContent" parameterType="string" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM simulation_experiment.class_schedule_teacher
    WHERE 1=1
    <if test="arg0 != 0">
      AND system_id = #{arg0,jdbcType=INTEGER}
    </if>
    <if test="arg1 != 0">
      AND teacher_id = #{arg1,jdbcType=INTEGER}
    </if>;
  </select>
  <select id="searchList" resultMap="BaseResultMap">

  </select>
  <select id="searchListByContent" resultMap="BaseResultMap">
    SELECT
      A.schedule_id,
      A.system_id,
      B.system_name,
      A.teacher_id,
      E.full_name AS teacher_name,
      A.course_order,
      A.monday_course,
      A.tuesday_course,
      A.wednesday_course,
      A.thursday_course,
      A.friday_course,
      A.saturday_course,
      A.sunday_course,
      C.full_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      D.full_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM simulation_experiment.class_schedule_teacher A
    LEFT JOIN simulation_experiment.system_data B
    ON A.system_id = B.system_id
    LEFT JOIN simulation_experiment.system_users C
    ON A.create_user = C.user_id
    LEFT JOIN simulation_experiment.system_users D
    ON A.update_user = D.user_id
    LEFT JOIN simulation_experiment.system_users E
    ON A.teacher_id = E.user_id
    WHERE A.system_id = #{arg0,jdbcType=INTEGER}
    AND A.teacher_id = #{arg1,jdbcType=INTEGER}
    ORDER BY A.course_order;
  </select>
  <select id="searchByID" resultMap="BaseResultMap">
    SELECT
      A.schedule_id,
      A.system_id,
      B.system_name,
      A.teacher_id,
      E.full_name AS teacher_name,
      A.course_order,
      A.monday_course,
      A.tuesday_course,
      A.wednesday_course,
      A.thursday_course,
      A.friday_course,
      A.saturday_course,
      A.sunday_course,
      C.full_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      D.full_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM simulation_experiment.class_schedule_teacher A
    LEFT JOIN simulation_experiment.system_data B
    ON A.system_id = B.system_id
    LEFT JOIN simulation_experiment.system_users C
    ON A.create_user = C.user_id
    LEFT JOIN simulation_experiment.system_users D
    ON A.update_user = D.user_id
    LEFT JOIN simulation_experiment.system_users E
    ON A.teacher_id = E.user_id
    WHERE A.schedule_id = #{arg0,jdbcType=INTEGER};
  </select>
  <select id="existCheck" resultType="java.lang.Integer">

  </select>
  <insert id="insert" parameterType="com.johnny.simulationexperimentservice.entity.ClassSchedule4TeacherEntity" >
    INSERT INTO simulation_experiment.class_schedule_teacher (
      system_id,
      teacher_id,
      course_order,
      monday_course,
      tuesday_course,
      wednesday_course,
      thursday_course,
      friday_course,
      saturday_course,
      sunday_course,
      create_user,
      update_user
    )
    VALUES (
      #{systemID, jdbcType=INTEGER},
      #{teacherID, jdbcType=INTEGER},
      #{courseOrder, jdbcType=INTEGER},
      #{mondayCourse, jdbcType=VARCHAR},
      #{tuesdayCourse, jdbcType=VARCHAR},
      #{wednesdayCourse, jdbcType=VARCHAR},
      #{thursdayCourse, jdbcType=VARCHAR},
      #{fridayCourse, jdbcType=VARCHAR},
      #{saturdayCourse, jdbcType=VARCHAR},
      #{sundayCourse, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.johnny.simulationexperimentservice.entity.ClassSchedule4TeacherEntity" >

  </update>
  <delete id="delete" parameterType="java.lang.Integer" >

  </delete>
  <delete id="deleteByContent" parameterType="java.lang.Integer" >
    DELETE FROM simulation_experiment.class_schedule_teacher
    WHERE system_id = #{arg0,jdbcType=INTEGER}
    AND teacher_id = #{arg1,jdbcType=INTEGER}
    AND course_order = #{arg2,jdbcType=INTEGER}
  </delete>
</mapper>