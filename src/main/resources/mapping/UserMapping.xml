<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.johnny.simulationexperimentservice.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.johnny.simulationexperimentservice.entity.UserEntity" >
    <id column="user_id" property="userID" jdbcType="INTEGER" />
    <result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="full_name" property="fullName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="searchTotalCountByUserRole" parameterType="string" resultType="java.lang.Integer">
    SELECT
    COUNT(1) AS TotalCount
    FROM simulation_experiment.system_users
    WHERE 1=1
    <if test="userRole != null">
      AND user_role = #{userRole,jdbcType=VARCHAR}
    </if>;
  </select>
  <select id="searchListByUserCode" resultMap="BaseResultMap">
    SELECT
    A.user_id,
    A.cellphone,
    A.user_code,
    A.full_name,
    A.sex,
    A.user_role,
    A.email,
    A.password,
    B.full_name AS create_user,
    DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
    B.full_name AS update_user,
    DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM simulation_experiment.system_users A
    LEFT JOIN simulation_experiment.system_users B
    ON A.create_user = B.user_id
    WHERE 1=1
    <if test="arg2 != null">
      AND A.user_role = #{arg2,jdbcType=VARCHAR}
    </if>
    ORDER BY A.update_time DESC
    LIMIT #{arg0,jdbcType=INTEGER}, #{arg1,jdbcType=INTEGER};
  </select>
  <select id="searchTotalCount" parameterType="string" resultType="java.lang.Integer">

  </select>
  <select id="searchList" resultMap="BaseResultMap">

  </select>

  <select id="searchByID" resultMap="BaseResultMap">
    SELECT
      A.user_id,
      A.cellphone,
      A.user_code,
      A.full_name,
      A.sex,
      A.user_role,
      A.email,
      A.password,
      B.full_name AS create_user,
      DATE_FORMAT(A.create_time, '%Y-%m-%d %H:%i:%s') AS create_time,
      B.full_name AS update_user,
      DATE_FORMAT(A.update_time, '%Y-%m-%d %H:%i:%s') AS update_time
    FROM simulation_experiment.system_users A
    LEFT JOIN simulation_experiment.system_users B
    ON A.create_user = B.user_id
    WHERE A.user_id = #{arg0,jdbcType=INTEGER};
  </select>
  <select id="existCheck" resultType="java.lang.Integer">

  </select>
  <insert id="insert" parameterType="com.johnny.simulationexperimentservice.entity.UserEntity" >
    INSERT INTO simulation_experiment.system_users (
      cellphone,
      user_code,
      full_name,
      sex,
      user_role,
      email,
      password,
      create_user,
      update_user
    )
    VALUES (
      #{cellphone, jdbcType=VARCHAR},
      #{userCode, jdbcType=VARCHAR},
      #{fullName, jdbcType=VARCHAR},
      #{sex, jdbcType=VARCHAR},
      #{userRole, jdbcType=VARCHAR},
      #{email, jdbcType=VARCHAR},
      #{password, jdbcType=VARCHAR},
      #{createUser, jdbcType=VARCHAR},
      #{updateUser, jdbcType=VARCHAR}
    )
  </insert>
  <update id="update" parameterType="com.johnny.simulationexperimentservice.entity.UserEntity" >
    UPDATE simulation_experiment.system_users SET
      cellphone = #{cellphone,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      full_name = #{fullName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    WHERE user_id = #{userID,jdbcType=INTEGER}
  </update>
  <delete id="delete" parameterType="java.lang.Integer" >
    DELETE FROM simulation_experiment.system_users
    WHERE user_id = #{id,jdbcType=INTEGER}
  </delete>
</mapper>